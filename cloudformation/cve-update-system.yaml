AWSTemplateFormatVersion: '2010-09-09'
Description: 'CVE Data Update System - Automatically fetch and store CVE data from Microsoft Security Response Center'

Parameters:
  Environment:
    Type: String
    Default: prod
    Description: Environment name
  LambdaTimeout:
    Type: Number
    Default: 300
    Description: Lambda function timeout in seconds
  LambdaMemory:
    Type: Number
    Default: 512
    Description: Lambda function memory in MB

Resources:
  # DynamoDB Table
  CVETable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'vpbank-cve-data-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'cve-update-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt CVETable.Arn
                  - !Sub '${CVETable.Arn}/index/*'
        - PolicyName: VPCExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: '*'

  # Lambda Function
  UpdateCVEDataFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'updateCVEDataLambda-${Environment}'
      Runtime: python3.9
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: !Ref LambdaTimeout
      MemorySize: !Ref LambdaMemory
      Environment:
        Variables:
          TABLE_NAME: !Ref CVETable
      Code:
        ZipFile: |
          import json
          def lambda_handler(event, context):
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from Lambda!')
              }

  # EventBridge Rule
  CVEMonthlyUpdateRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub 'cve-monthly-update-${Environment}'
      Description: 'Trigger CVE data update on the first day of each month at 6 AM UTC'
      ScheduleExpression: 'cron(0 6 1 * ? *)'
      State: ENABLED
      Targets:
        - Arn: !GetAtt UpdateCVEDataFunction.Arn
          Id: !Sub 'update-cve-data-lambda-${Environment}'

  # Permission for EventBridge to invoke Lambda
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref UpdateCVEDataFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CVEMonthlyUpdateRule.Arn

  # CloudWatch Log Group
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/updateCVEDataLambda-${Environment}'
      RetentionInDays: 30

Outputs:
  DynamoDBTableName:
    Description: 'Name of the DynamoDB table'
    Value: !Ref CVETable
    Export:
      Name: !Sub '${AWS::StackName}-TableName'

  DynamoDBTableArn:
    Description: 'ARN of the DynamoDB table'
    Value: !GetAtt CVETable.Arn
    Export:
      Name: !Sub '${AWS::StackName}-TableArn'

  LambdaFunctionName:
    Description: 'Name of the Lambda function'
    Value: !Ref UpdateCVEDataFunction
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionName'

  LambdaFunctionArn:
    Description: 'ARN of the Lambda function'
    Value: !GetAtt UpdateCVEDataFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionArn'

  EventBridgeRuleName:
    Description: 'Name of the EventBridge rule'
    Value: !Ref CVEMonthlyUpdateRule
    Export:
      Name: !Sub '${AWS::StackName}-EventBridgeRuleName' 